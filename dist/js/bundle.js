class I{_divElement;_lines;_maxLines;constructor(q){this._divElement=q,this._divElement.innerHTML="",this._lines=[],this._maxLines=30}log(...q){if(q.length==0)return;const _=Array.prototype.slice.call(q).join(" ");console.log(_),this._pushText(_)}error(...q){if(q.length==0)return;const _=Array.prototype.slice.call(q).join(" ");console.error(_),this._pushText(`[ERR] - ${_}`)}_pushText(q){if(this._lines.push(q),this._lines.length>this._maxLines)this._lines.splice(0,this._lines.length-this._maxLines);this._divElement.innerHTML=this._lines.map((_)=>{if(/^(\[JS\]).*$/.test(_))return`<span style="color: rgb(200,200,150);">${_}</span>`;if(/^(\[C\+\+\]).*$/.test(_))return`<span style="color: rgb(150,150,200);">${_}</span>`;return _}).join("<br>"),this._divElement.scrollTop=this._divElement.scrollHeight}get size(){return this._lines.length}peekLast(){if(this._lines.length>0)return this._lines[this._lines.length-1];return}popLast(){if(this._lines.length>0)this._lines.splice(this._lines.length-1,1)}}var w=I;var h=/[?&]+([^=&]+)=([^&]*)/gi,b=()=>{const q={};let _=null;while(_=h.exec(window.location.href)){const J=_[1],X=_[2];q[J]=X}return q};var B=(q)=>{return new Promise((_,J)=>{const X=document.createElement("script");X.src=q,X.addEventListener("load",()=>_),X.addEventListener("error",J),document.head.appendChild(X)})};var f=(q)=>{if(!window.WebGL2RenderingContext)throw new Error("missing WebGL2 feature (unsuported)");const _={alpha:!1,antialias:!1,depth:!0,failIfMajorPerformanceCaveat:!1,powerPreference:"high-performance",premultipliedAlpha:!0,preserveDrawingBuffer:!0,stencil:!1},J=q.getContext("webgl2",_);if(!J)throw new Error("WebGL2 context failed (initialisation)");return J};var A=()=>{return(()=>{try{if(typeof WebAssembly==="object"&&typeof WebAssembly.instantiate==="function"){const _=new WebAssembly.Module(Uint8Array.of(0,97,115,109,1,0,0,0));if(_ instanceof WebAssembly.Module)return new WebAssembly.Instance(_)instanceof WebAssembly.Instance}}catch(_){}return!1})()};var F=()=>{return!!window.Worker};var T=()=>{return!!window.WebGL2RenderingContext};var C=()=>{const q=window.SharedArrayBuffer!==void 0;if(q){const J={initial:8,maximum:8,shared:!0};if(!(new WebAssembly.Memory(J).buffer instanceof SharedArrayBuffer))return!1}return q};class M{_canvas;_webglCtx;_width=800;_height=600;_isInitialized=!1;_isAborted=!1;_wasmApplicationUpdateFunc;_wasmApplicationRenderFunc;_onProgress;_onError;constructor(q,_,J){this._canvas=q,this._onProgress=_,this._onError=J}async initialize(q,_,J,X,K){if(this._width=q,this._height=_,!F())throw new Error("missing WebWorker feature (unsupported)");if(K.log("[JS][check] WebWorker feature => supported"),!A())throw new Error("missing WebAssembly feature (unsupported)");K.log("[JS][check] WebAssembly feature => supported");const H=C();if(H)K.log("[JS][check] multithreading => supported");else K.log("[JS][check] multithreading => NOT supported"),K.log("[JS][check] => falling back to the webworker version");if(!T())throw new Error("missing WebGL2 feature (unsupported)");K.log("[JS][check] WebGL2 feature => supported");const Z=()=>{if(this._isAborted=!0,this._onError)this._onError("Could not create a WebGL2 context.")};this._canvas.addEventListener("webglcontextcreationerror",Z,!1);const R=()=>{if(this._isAborted=!0,this._onError)this._onError("WebGL2 context lost. You will need to reload the page.")};this._canvas.addEventListener("webglcontextlost",R,!1);const P=(z)=>{z.preventDefault()};this._canvas.addEventListener("contextmenu",P,!1),this._webglCtx=f(this._canvas),K.log("[JS] WebGL2 context initialized");const O=`wasm/${H?"pthread":"webworker"}`;return new Promise((z,W)=>{const y={downloadingDataRegExp:/Downloading data\.\.\. \(([0-9]*)\/([0-9]*)\)/,lastProgressLevel:0,locateFile:(Q)=>{return`${O}/${Q}`},print:(Q)=>{K.log(`[C++][out] ${Q}`)},printErr:(Q)=>{K.error(`[C++][err] ${Q}`)},setStatus:(Q)=>{if(!Q)return;const k=y.downloadingDataRegExp.exec(Q);if(k){const j=parseFloat(k[1]),$=parseFloat(k[2]),U=Math.floor(j/$*100);if(y.lastProgressLevel!==U)y.lastProgressLevel=U,this._onProgress(U)}else K.log(`[JS][wasm][status] ${Q}`)},onRuntimeInitialized:()=>{K.log("[JS][wasm] loaded"),K.log("[JS][wasm] initialising");const Q={startApplication:window.Module.cwrap("startApplication",void 0,["number","number","number","number"]),updateApplication:window.Module.cwrap("updateApplication",void 0,["number"]),renderApplication:window.Module.cwrap("renderApplication",void 0,[])};this._wasmApplicationUpdateFunc=Q.updateApplication,this._wasmApplicationRenderFunc=Q.renderApplication,Q.startApplication(this._width,this._height,J,X),this._isInitialized=!0,K.log("[JS][wasm] initialized"),z()},canvas:this._canvas,preinitializedWebGLContext:this._webglCtx,noInitialRun:!0,noExitRuntime:!0};window.Module=y,K.log("[JS][wasm] loading"),B(`./${O}/index.js`).catch(W)})}update(q){if(!this._isInitialized||this._isAborted)return;if(this._wasmApplicationUpdateFunc)this._wasmApplicationUpdateFunc(q)}render(){if(!this._isInitialized||this._isAborted)return;if(this._wasmApplicationRenderFunc)this._wasmApplicationRenderFunc()}abort(){if(!this._isInitialized||this._isAborted)return;this._isAborted=!0;const q=window.Module;if(q)q.setStatus=(_)=>{if(_)console.error(`[JS][wasm][aborted] ${_}`)}}}var N=(q)=>{const _=document.querySelector(q);if(!_)throw new Error(`DOM elements not found, id=${q}`);return _},E=async()=>{let q=!0;const _=N("#loggerOutput"),J=new w(_);J.log("[JS] page loaded");const X=(D)=>{q=!1,J.error(`[JS] exception, message=${D.message}`)};window.addEventListener("error",X);const K=N("#errorText"),H=N("#renderArea"),Z=N("#canvas"),R={switchTo3cpuCores:N("#try_with_3_cpu_cores"),switchTo6cpuCores:N("#try_with_6_cpu_cores")},P=(D)=>{if(D.style.display!=="none")D.style.display="none"},O=(D)=>{if(D.style.display!=="block")D.style.display="block"},z=(D)=>{K.innerHTML=D,P(Z),O(K)},W=()=>{P(K),O(Z)},y=(D,Y)=>{H.style.maxWidth=Z.style.maxWidth=`${D}px`,H.style.maxHeight=Z.style.maxHeight=`${Y}px`,Z.width=D,Z.height=Y},Q=(D)=>{X(D),z(`fatal error, event=${D}`)};window.removeEventListener("error",X),window.addEventListener("error",Q);const k=(D,Y)=>D?parseInt(D,10):Y,j=b(),$={width:k(j.width,800),height:k(j.height,600),totalGenomes:k(j.totalGenomes,1000),totalCores:k(j.totalCores,3)};y($.width,$.height);const U=(D,Y,v)=>{if(D.disabled=!1,!D.classList.contains(Y))D.classList.add(Y);if(D.classList.contains("grayButton"))D.classList.remove("grayButton");D.addEventListener("click",()=>{window.location.href=window.location.pathname+`?totalCores=${v}`})};if($.totalCores!=3)R.switchTo6cpuCores.disabled=!0,U(R.switchTo3cpuCores,"blueButton",3);else R.switchTo3cpuCores.disabled=!0,U(R.switchTo6cpuCores,"redButton",6);const S=new M(Z,(D)=>{const Y=`Loading wasm [${D}%]`;if(J.size>0&&J.peekLast().indexOf("Loading wasm [")>=0)J.popLast();J.log(`[JS] ${Y}`),z(Y)},z);try{await S.initialize($.width,$.height,$.totalGenomes,$.totalCores,J),W()}catch(D){J.error(`[JS] dependencies check failed: message="${D.message}"`),z(["this browser isn't compatible","error message:",`=> ${D.message}`].join("<br>"))}let V=Date.now();const G=()=>{if(q)requestAnimationFrame(G);const D=Date.now(),Y=D-V;V=D,S.update(Y),S.render()};G()};window.addEventListener("load",E);
